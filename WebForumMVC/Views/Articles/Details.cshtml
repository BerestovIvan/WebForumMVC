@model WebForumMVC.Models.ViewModels.ArticleViewModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Article</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Text)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Text)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Creator)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Creator.Id)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Topic)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Topic.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Comments)
        </dt>
        

    </dl>
</div>
<div class="comments">
    <div class="createComment">
        @if (!string.IsNullOrEmpty(Context.Request.Headers["UserId"].ToString()))
        {
            await Html.RenderPartialAsync("/Views/Comments/Create.cshtml",
          new WebForumMVC.Models.PostModels.CommentPostModel { ArticleId = Model.Id });
        }
        else
        {
             @Html.ActionLink(
            "Sign in to write comment.",
             "Login",
             "Authenticate")
        }
    </div>
    <dl class="row">
        <dt>
            @foreach (var comment in Model.Comments)
            {
                <p>@comment.ApplicationUser.Email</p>
                <p>@comment.Text</p>
            }
        </dt>
    </dl>


</div>

<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
